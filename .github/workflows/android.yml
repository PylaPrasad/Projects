name: Build Android APK

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies and Android SDK
      run: |
        # Update apt and install essential packages
        sudo apt update
        sudo apt install -y python3-pip build-essential git zip unzip openjdk-17-jdk curl

        # Upgrade pip and install buildozer, cython
        pip install --upgrade pip
        pip install --user buildozer cython

        # Add user's local bin to PATH for buildozer and cython
        echo "$HOME/.local/bin" >> $GITHUB_PATH

        # --- Android SDK Setup ---
        # Define Android SDK root directory
        ANDROID_SDK_ROOT="/usr/local/android-sdk"
        # The URL for the latest command-line tools.
        # It's good practice to periodically check Google's Android SDK download page for the absolute latest.
        SDK_TOOLS_ZIP="commandlinetools-linux-8583021_latest.zip" # This is a common recent version, verify if a newer one exists
        SDK_TOOLS_URL="https://dl.google.com/android/repository/${SDK_TOOLS_ZIP}"

        # Create the SDK directory structure
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"

        # Download and unzip the command-line tools into a temporary directory first
        mkdir -p /tmp/android-sdk-temp
        curl -o /tmp/${SDK_TOOLS_ZIP} ${SDK_TOOLS_URL}
        unzip -q /tmp/${SDK_TOOLS_ZIP} -d /tmp/android-sdk-temp/
        rm /tmp/${SDK_TOOLS_ZIP}

        # Move the contents of the unzipped cmdline-tools directory into the 'latest' directory
        # This creates the structure: $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager
        mv /tmp/android-sdk-temp/cmdline-tools/* "$ANDROID_SDK_ROOT/cmdline-tools/latest"

        # Clean up temporary directory
        rmdir /tmp/android-sdk-temp/cmdline-tools
        rmdir /tmp/android-sdk-temp

        # Set up environment variables for Android SDK
        echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        # Add the sdkmanager and platform tools to the system PATH
        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

        # Accept Android SDK licenses automatically
        yes | sdkmanager --licenses

        # Install specific Android SDK components needed by Buildozer
        # 'platforms;android-34' provides the Android API level 34 platform.
        # 'build-tools;34.0.0' provides the build tools, including AIDL.
        # 'platform-tools' provides essential tools like adb.
        # Adjust 'android-34' and '34.0.0' if your buildozer.spec targets a different API level/build tools version.
        sdkmanager "platforms;android-34" "build-tools;34.0.0" "platform-tools"

    - name: Build APK
      run: |
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: kivy-apk
        path: bin/*.apk
